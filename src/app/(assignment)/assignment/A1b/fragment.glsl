/////////////////////////////////////////////////////
//// CS 8803/4803 CGAI: Computer Graphics in AI Era
//// Assignment 1B: Neural SDF
/////////////////////////////////////////////////////

precision highp float;              //// set default precision of float variables to high precision

varying vec2 vUv;                   //// screen uv coordinates (varying, from vertex shader)
uniform vec2 iResolution;           //// screen resolution (uniform, from CPU)
uniform float iTime;                //// time elapsed (uniform, from CPU)

#define PI 3.1415925359

const vec3 CAM_POS = vec3(0, 1, 0);

vec3 rotate(vec3 p, vec3 ax, float ro)
{
    return mix(dot(p, ax) * ax, p, cos(ro)) + sin(ro) * cross(ax, p);
}

/////////////////////////////////////////////////////
//// sdf functions
/////////////////////////////////////////////////////

float sdfPlane(vec3 p, float h)
{
    return p.y - h;
}

float sdfBunny(vec3 p)
{
    float rotationAngle = iTime * -0.5;
    p = rotate(p, vec3(0., 1., 0.), rotationAngle);

    p = rotate(p, vec3(1., 0., 0.), PI / 2.);
    p = rotate(p, vec3(0., 0., 1.), PI / 2. + PI / 1.);

    // sdf is undefined outside the unit sphere, uncomment to witness the abominations
    if(length(p) > 1.0)
    {
        return length(p) - 0.9;
    }

    //// neural network weights for the bunny 

    

    vec4 f0_0=sin(p.y*vec4(-.51,-2.78,3.72,-.13)+p.z*vec4(1.78,3.70,-4.32,-6.33)+p.x*vec4(3.35,-2.29,2.04,-.10)+vec4(7.66,-2.17,11.23,10.49));
    vec4 f0_1=sin(p.y*vec4(3.12,-.84,4.30,-3.85)+p.z*vec4(-4.80,-4.59,2.61,-4.78)+p.x*vec4(-.91,.18,.09,-2.21)+vec4(-6.70,-11.30,-1.44,-6.09));
    vec4 f0_2=sin(p.y*vec4(5.38,5.50,.42,-.59)+p.z*vec4(-2.87,.21,-5.16,-2.13)+p.x*vec4(-5.85,5.58,.71,-5.82)+vec4(-10.81,-2.87,8.98,-3.47));
    vec4 f0_3=sin(p.y*vec4(-5.37,-5.03,-.75,.42)+p.z*vec4(-.96,-4.20,.83,.75)+p.x*vec4(1.17,5.24,-4.57,2.83)+vec4(9.31,1.76,7.33,-6.60));
    vec4 f0_4=sin(p.y*vec4(4.70,4.77,1.55,-5.79)+p.z*vec4(.95,3.31,-3.37,-3.97)+p.x*vec4(1.57,-.63,.39,4.23)+vec4(8.07,9.75,-8.46,-6.44));
    vec4 f0_5=sin(p.y*vec4(-5.44,5.90,5.80,-5.51)+p.z*vec4(1.82,-2.75,-2.80,-3.50)+p.x*vec4(4.62,2.82,-1.21,5.60)+vec4(-3.44,-9.81,-3.84,10.01));
    vec4 f0_6=sin(p.y*vec4(.90,-3.76,.75,-4.32)+p.z*vec4(-.65,-3.42,.73,-3.78)+p.x*vec4(6.37,-.81,-3.04,3.79)+vec4(-7.08,-3.29,-1.95,7.40));
    vec4 f0_7=sin(p.y*vec4(5.75,2.09,-4.72,1.41)+p.z*vec4(2.78,-2.87,.61,-1.29)+p.x*vec4(.39,.10,-1.51,5.09)+vec4(1.04,10.15,5.73,4.49));
    vec4 f1_0=sin(mat4(.30,-.27,-.43,.15,.14,.28,.30,.19,.20,.03,-.28,-.36,.22,-.21,-.22,-.34)*f0_0+
        mat4(-.09,.03,.07,-.40,-.36,-.31,.24,.18,-.18,-.44,-.15,-.13,-.12,-.35,-.24,-.04)*f0_1+
        mat4(-.01,-.15,-.25,.13,-.06,.04,-.07,.02,.38,.04,.35,.27,.06,.37,-.13,.19)*f0_2+
        mat4(-.19,-.22,-.27,-.15,.03,.04,-.05,-.07,-.48,.08,-.07,.33,.45,.06,.27,.43)*f0_3+
        mat4(-.07,-.03,-.14,.27,-.17,.03,-.28,-.41,-.02,-.23,-.22,-.35,.23,.13,.46,.09)*f0_4+
        mat4(-.04,.31,.24,-.13,.22,.10,-.40,.15,.34,-.35,.08,.42,.08,-.05,-.15,.09)*f0_5+
        mat4(-.07,.31,-.22,.30,.32,.22,-.49,.19,.16,.03,.27,-.27,.08,.34,-.47,.26)*f0_6+
        mat4(.22,-.25,.08,-.40,-.09,.14,-.12,-.31,-.43,-.22,-.46,.00,.03,.10,-.23,.37)*f0_7+
        vec4(-1.18,1.57,.45,1.13))/1.0+f0_0;
    vec4 f1_1=sin(mat4(.60,.22,.25,-.38,-.33,.39,.09,-.11,.11,-.29,.18,-.02,-.19,-.08,.06,.43)*f0_0+
        mat4(.36,.03,.03,-.08,-.42,.49,.18,-.48,-.22,.28,.36,.11,.26,.06,-.20,.10)*f0_1+
        mat4(.38,.10,.08,-.26,.14,-.47,.15,-.09,-.05,-.24,-.27,-.20,.54,-.25,-.19,-.18)*f0_2+
        mat4(-.39,-.16,.17,-.40,.22,.10,-.22,-.14,-.14,-.46,-.11,.22,-.27,.06,-.09,-.06)*f0_3+
        mat4(-.41,.37,.44,-.43,-.29,.07,.04,-.42,.16,.23,.25,-.09,-.21,-.11,-.14,-.00)*f0_4+
        mat4(-.23,-.06,.07,-.33,.19,.06,.42,.33,.18,.04,-.17,-.02,.19,-.09,.12,-.22)*f0_5+
        mat4(-.24,-.38,.12,-.23,-.49,-.09,-.38,-.27,-.08,.39,.08,-.23,.09,-.08,.22,-.07)*f0_6+
        mat4(-.10,-.02,-.11,.12,-.37,-.18,.06,-.31,.16,-.27,-.06,-.13,-.32,.03,.10,.00)*f0_7+
        vec4(.56,.25,2.78,2.81))/1.0+f0_1;
    vec4 f1_2=sin(mat4(.31,-.23,.57,-.44,.28,-.34,.21,.09,.03,-.07,.16,-.44,-.20,-.19,-.14,.24)*f0_0+
        mat4(-.10,-.25,.07,.25,.14,-.34,-.24,-.72,.23,.30,-.19,.55,.24,.27,.09,-.17)*f0_1+
        mat4(-.05,.06,-.25,-.00,-.05,.21,.22,-.03,.65,.29,-.28,-.13,.15,-.36,-.20,-.52)*f0_2+
        mat4(-.00,.22,.14,-.59,-.06,-.03,.17,.28,-.01,-.15,-.35,-.15,.10,-.03,-.53,-.11)*f0_3+
        mat4(.10,-.61,.05,-.56,.09,-.11,-.19,-.07,.41,.32,-.21,-.26,.14,.20,.05,-.09)*f0_4+
        mat4(.53,.06,.04,.12,.24,-.01,.25,.13,-.18,.25,.03,-.24,.30,.24,-.24,-.14)*f0_5+
        mat4(-.22,-.10,-.22,-.13,-.36,.44,.14,.04,-.44,.31,-.35,.44,-.33,.17,-.30,.22)*f0_6+
        mat4(-.14,.23,-.40,.35,.10,.18,-.06,-.20,.23,.06,.07,.36,.21,-.19,.34,-.34)*f0_7+
        vec4(1.32,.56,2.91,-.33))/1.0+f0_2;
    vec4 f1_3=sin(mat4(.30,.31,-.07,.58,.06,-.41,-.14,.47,.05,.12,-.31,-.26,.08,.06,.23,.14)*f0_0+
        mat4(-.18,-.08,-.27,-.16,.27,.35,-.16,.05,.18,.40,-.01,-.06,.04,-.22,-.12,-.00)*f0_1+
        mat4(-.18,-.04,-.04,-.24,-.11,.25,.16,.28,.32,-.27,-.03,.19,.01,.11,-.04,.08)*f0_2+
        mat4(.19,-.25,.12,.21,.18,-.11,.11,-.17,-.32,.30,.33,-.11,.32,.49,.73,.07)*f0_3+
        mat4(.35,-.20,.22,.23,.02,-.23,.30,.03,.21,.10,.30,.03,.41,-.17,.15,-.25)*f0_4+
        mat4(-.36,-.04,.10,.09,-.01,-.21,.08,.17,.17,.30,.02,.10,.03,-.43,.21,.19)*f0_5+
        mat4(.37,-.16,.13,.33,-.27,.09,-.28,.13,-.00,.59,-.38,.56,-.27,-.10,-.31,.14)*f0_6+
        mat4(-.25,-.13,-.27,.00,-.05,.04,-.32,-.31,.27,-.43,-.24,-.26,-.34,.37,-.17,-.25)*f0_7+
        vec4(2.72,.84,-.35,-1.57))/1.0+f0_3;
    vec4 f1_4=sin(mat4(-.59,-.10,.08,-.44,.23,.52,-.08,.14,-.32,.25,.16,.07,-.03,.15,.05,-.30)*f0_0+
        mat4(-.25,-.33,.15,.24,.22,.17,.01,.08,-.01,-.04,.57,.32,-.14,.06,-.14,.36)*f0_1+
        mat4(-.32,-.04,-.15,.21,-.19,.28,-.03,-.02,-.04,.05,.10,-.41,.16,.13,.24,.06)*f0_2+
        mat4(-.28,-.08,-.22,.10,-.30,-.00,.49,.10,-.22,-.52,.33,-.25,.44,.15,.48,.45)*f0_3+
        mat4(-.29,-.16,-.12,.37,.04,-.19,-.19,-.03,.10,-.13,-.03,.15,-.33,.25,-.11,.55)*f0_4+
        mat4(-.36,-.17,-.04,.24,.12,.22,-.20,.43,-.61,-.34,-.53,.02,-.14,.12,.02,-.22)*f0_5+
        mat4(.39,.05,.22,.21,-.47,-.47,-.13,.12,.15,-.38,-.46,-.15,.28,-.14,-.43,-.27)*f0_6+
        mat4(-.28,-.58,-.19,-.21,-.17,.21,-.56,.57,-.22,-.29,.21,-.05,-.34,-.24,.05,-.35)*f0_7+
        vec4(2.79,-2.54,-3.23,-3.02))/1.0+f0_4;
    vec4 f1_5=sin(mat4(.29,-.11,.20,-.05,-.45,.13,-.06,.03,.32,-.15,-.25,.43,-.41,.44,-.22,-.16)*f0_0+
        mat4(.17,-.20,.47,.07,-.38,-.02,-.06,-.13,-.31,-.25,-.40,.18,-.38,.33,-.17,.00)*f0_1+
        mat4(-.10,.06,.28,.03,-.01,.15,-.04,.02,.05,-.57,-.59,.32,-.17,.23,-.05,-.36)*f0_2+
        mat4(.29,-.32,.24,-.27,-.09,-.15,-.33,.01,.12,-.03,-.10,-.06,.60,.12,-.14,-.37)*f0_3+
        mat4(.31,.08,.22,.20,-.30,-.20,-.00,-.39,.15,-.09,-.30,-.23,.03,-.09,-.22,.23)*f0_4+
        mat4(.19,-.02,-.10,.36,-.35,-.53,-.18,.31,-.00,-.10,.39,-.23,.20,.05,-.10,-.13)*f0_5+
        mat4(-.44,.34,.12,.37,.03,.17,-.23,-.36,.39,.29,-.11,.33,.00,.25,.01,-.10)*f0_6+
        mat4(.33,-.22,-.13,-.51,-.68,-.37,.07,-.33,.13,-.28,.12,-.21,.23,-.45,-.45,-.23)*f0_7+
        vec4(-1.68,2.73,-2.09,.90))/1.0+f0_5;
    vec4 f1_6=sin(mat4(-.35,-.24,.23,.34,.30,.33,-.02,-.46,-.13,.35,-.25,-.02,.05,-.17,.45,-.15)*f0_0+
        mat4(-.01,.22,-.28,.03,.07,-.40,-.28,.04,-.50,.30,.03,.59,-.04,.10,-.20,-.14)*f0_1+
        mat4(.17,-.12,.25,.05,.04,.28,-.05,-.26,.08,.35,.01,.32,-.36,-.47,.15,-.25)*f0_2+
        mat4(-.09,-.26,.06,-.13,.04,-.20,-.02,.31,-.60,.12,-.24,-.21,.61,.32,.22,.35)*f0_3+
        mat4(-.16,.03,-.31,.35,-.24,-.12,-.12,-.11,-.20,.12,.05,.15,-.07,.07,-.16,.09)*f0_4+
        mat4(-.02,-.24,.27,.08,.17,.03,-.13,-.17,-.09,.30,-.04,.43,.21,-.27,.37,.17)*f0_5+
        mat4(-.21,.03,-.02,.37,-.19,-.25,.15,.25,.27,-.22,.17,.50,.02,.19,.18,-.02)*f0_6+
        mat4(.03,.24,-.15,-.44,.41,-.15,.05,-.11,.10,.21,-.16,-.09,.15,.01,-.13,-.20)*f0_7+
        vec4(-2.50,.01,-2.58,-1.89))/1.0+f0_6;
    vec4 f1_7=sin(mat4(.01,.26,-.45,-.59,.04,-.13,.26,.18,.31,.38,-.18,-.16,.20,-.02,.13,-.10)*f0_0+
        mat4(.24,-.01,.13,-.06,-.55,.17,.28,.12,-.27,.40,.08,-.03,.42,-.05,.04,.14)*f0_1+
        mat4(-.15,-.25,-.10,-.11,.00,.20,-.08,-.43,-.01,-.25,.21,-.45,-.10,.02,.28,.04)*f0_2+
        mat4(-.21,.09,.23,.19,.25,.33,-.01,.07,-.04,.08,-.00,-.19,-.27,.45,.04,-.07)*f0_3+
        mat4(-.13,.19,.14,.25,-.15,-.41,.14,.27,.05,.20,-.20,-.32,.23,.13,-.22,.27)*f0_4+
        mat4(-.09,-.26,-.33,.09,.03,-.09,-.31,-.12,.10,.28,-.05,-.04,-.19,-.37,.20,.09)*f0_5+
        mat4(-.15,-.14,.21,.10,-.06,-.18,-.14,-.34,-.43,.50,.38,-.38,.61,-.02,-.21,.43)*f0_6+
        mat4(.05,-.37,.27,-.03,.50,-.09,.47,-.16,-.05,.04,-.49,-.13,-.12,.29,-.59,-.34)*f0_7+
        vec4(-.74,-.13,-.51,1.04))/1.0+f0_7;
    vec4 f2_0=sin(mat4(-.12,.46,.10,.42,-.02,.03,-.07,.02,.38,.03,.07,-.17,.15,.01,-.07,-.05)*f1_0+
        mat4(.31,-.31,-.43,-.20,-.04,-.17,.07,-.17,-.10,-.29,.14,.19,-.44,.28,-.00,.05)*f1_1+
        mat4(.20,.15,-.05,-.08,.22,.18,.05,.05,-.36,.27,.37,.21,.12,-.22,-.07,.33)*f1_2+
        mat4(-.12,-.15,.26,-.51,-.13,.14,-.14,.22,.30,-.08,.47,.48,-.64,-.28,-.18,-.05)*f1_3+
        mat4(-.25,.07,.41,.15,.54,.02,-.04,.07,-.34,-.06,-.23,-.23,.17,.25,-.09,.30)*f1_4+
        mat4(-.30,-.01,.15,.11,-.35,-.12,.15,.24,-.05,.14,-.23,-.28,.25,-.01,-.46,.17)*f1_5+
        mat4(.33,.13,-.66,.15,-.03,-.27,.06,.13,.07,.17,.25,-.14,.03,-.34,-.26,-.36)*f1_6+
        mat4(.25,-.17,.23,-.37,.25,.20,.22,-.06,-.28,-.07,.34,-.17,.10,.00,.02,-.51)*f1_7+
        vec4(-3.31,1.81,1.64,-3.37))/1.4+f1_0;
    vec4 f2_1=sin(mat4(.15,.22,.31,.13,-.10,.55,.22,.02,-.33,-.20,-.03,-.24,.23,.01,.15,-.24)*f1_0+
        mat4(.21,.18,-.06,.03,-.16,.10,.01,-.20,.03,.45,-.51,.00,-.10,.20,.16,.24)*f1_1+
        mat4(-.13,-.13,-.27,.22,.14,-.20,-.01,-.20,.17,.03,-.71,.08,.17,.24,-.56,.13)*f1_2+
        mat4(.10,-.36,.23,-.27,.02,.31,-.20,.19,-.02,.10,-.28,-.30,.30,-.58,.08,.15)*f1_3+
        mat4(-.33,-.03,-.03,.14,.43,-.47,.43,.41,-.32,-.19,-.19,.73,.34,-.09,-.27,-.21)*f1_4+
        mat4(-.24,-.17,.03,-.04,-.15,.14,.04,-.05,.09,.15,.30,.11,.14,-.19,.24,.01)*f1_5+
        mat4(.21,-.28,-.42,-.34,-.24,-.25,-.38,-.30,-.30,.37,.33,.22,.40,-.15,.05,-.16)*f1_6+
        mat4(.17,-.01,-.01,-.31,-.46,.09,-.30,.15,-.31,-.07,-.39,-.12,-.14,.32,-.22,.02)*f1_7+
        vec4(1.31,-1.58,-2.93,-3.26))/1.4+f1_1;
    vec4 f2_2=sin(mat4(-.10,-.04,.44,.11,.19,-.03,-.43,.53,.19,-.09,.27,.02,-.09,.64,-.32,-.30)*f1_0+
        mat4(-.23,-.37,.05,.28,.02,.24,.35,-.42,-.31,-.06,-.34,-.05,.30,.20,-.17,-.07)*f1_1+
        mat4(.04,-.19,-.20,.29,.08,.16,.23,-.44,-.20,-.32,.04,-.35,.12,.22,-.11,-.14)*f1_2+
        mat4(.24,.50,-.09,-.08,-.15,.32,-.23,-.28,.20,.22,.45,-.35,-.01,-.11,-.39,-.27)*f1_3+
        mat4(.24,.43,.42,.38,.38,-.31,-.34,.29,.03,-.25,.16,-.18,-.38,.02,-.36,.01)*f1_4+
        mat4(-.09,.15,-.10,.38,.01,.02,.03,.47,-.35,.06,-.13,.29,-.28,.24,-.21,-.29)*f1_5+
        mat4(.40,.43,-.18,.20,-.11,.02,.31,-.29,.38,.03,-.09,.34,.18,-.37,.18,-.24)*f1_6+
        mat4(-.10,.07,-.08,.43,-.54,.25,-.08,.08,.12,-.56,.03,.28,-.11,-.20,-.16,-.04)*f1_7+
        vec4(-1.65,2.43,-3.60,-2.53))/1.4+f1_2;
    vec4 f2_3=sin(mat4(.54,-.27,.16,-.40,.30,.36,-.24,-.02,-.11,-.37,-.04,.21,.06,.13,-.28,.29)*f1_0+
        mat4(.04,-.02,-.16,.07,.03,-.19,.10,.02,-.02,-.26,.12,-.26,-.25,-.20,-.19,.13)*f1_1+
        mat4(-.27,-.06,-.13,.10,-.15,-.42,-.20,-.42,.26,-.13,.37,-.25,.34,-.22,-.03,.08)*f1_2+
        mat4(.04,-.40,-.06,-.12,.13,-.24,-.28,.38,.25,-.13,-.03,.29,.25,-.45,.16,-.20)*f1_3+
        mat4(.66,.35,.11,.17,-.25,-.22,.01,.27,-.34,.04,-.30,.40,-.12,.26,.24,.15)*f1_4+
        mat4(-.06,-.12,-.00,-.09,.13,.10,.21,.12,.10,.07,.28,-.13,.10,.46,.14,.01)*f1_5+
        mat4(.22,-.34,.08,-.00,-.17,-.00,-.40,-.04,.24,.55,.01,.16,-.45,.30,.10,-.24)*f1_6+
        mat4(-.37,.47,.02,.42,-.29,.32,.19,-.05,.32,-.24,.13,-.44,.34,-.76,-.31,-.28)*f1_7+
        vec4(2.49,1.79,.18,.77))/1.4+f1_3;
    vec4 f2_4=sin(mat4(-.16,.24,-.02,-.01,.05,-.45,-.55,-.16,-.03,.00,.21,-.40,-.10,-.23,-.16,-.22)*f1_0+
        mat4(.50,.09,.04,.19,.09,-.30,.07,.18,.14,-.10,.15,.43,.33,.21,-.52,.13)*f1_1+
        mat4(-.23,-.06,-.07,-.04,-.35,-.27,.15,.21,-.36,-.30,.43,-.21,.46,-.04,-.24,.14)*f1_2+
        mat4(.12,.26,.42,.08,-.07,.09,.22,.29,.00,.37,.17,-.46,.23,-.26,.66,.07)*f1_3+
        mat4(.33,.15,-.24,-.21,.07,.07,.40,.37,-.31,.27,.37,.17,-.24,.12,.29,.25)*f1_4+
        mat4(.39,-.28,.02,.42,-.12,.13,.13,-.11,.75,.14,.26,-.38,.30,.17,.43,-.20)*f1_5+
        mat4(.25,.02,.13,-.36,.38,.26,-.39,-.08,.16,-.09,.11,-.39,.23,-.06,-.18,-.25)*f1_6+
        mat4(.05,-.12,.47,-.37,-.03,-.10,.40,.19,.38,.19,.23,-.43,-.26,-.36,.14,-.23)*f1_7+
        vec4(-2.00,3.20,.33,2.67))/1.4+f1_4;
    vec4 f2_5=sin(mat4(.09,.26,.51,.27,-.29,.32,-.01,.09,-.31,-.13,.08,.21,-.01,.14,-.35,-.42)*f1_0+
        mat4(.44,-.31,.25,.04,-.11,-.54,.32,.08,-.00,-.08,.06,-.20,-.22,.17,.10,-.21)*f1_1+
        mat4(-.24,-.18,.02,-.06,.07,-.12,.13,-.39,-.19,-.47,-.24,.08,-.10,.05,-.04,.09)*f1_2+
        mat4(-.36,.19,.15,.14,-.24,.51,.30,.18,.54,.15,.04,-.73,.12,-.23,.62,-.51)*f1_3+
        mat4(-.28,.23,.22,-.43,.15,.27,-.14,-.04,-.25,-.12,-.11,.03,.18,.04,-.30,.33)*f1_4+
        mat4(-.29,-.40,-.19,.26,-.47,-.17,.02,-.16,-.35,-.34,.42,-.07,-.14,.30,-.25,-.24)*f1_5+
        mat4(.23,.46,-.39,-.21,.17,.03,.53,.40,.31,-.18,.37,.14,.21,.53,-.12,-.16)*f1_6+
        mat4(.21,-.26,-.30,-.37,-.40,.42,-.24,-.21,-.24,-.00,.28,-.09,.21,.02,.27,.07)*f1_7+
        vec4(1.76,-2.15,3.49,.47))/1.4+f1_5;
    vec4 f2_6=sin(mat4(.14,-.21,-.39,-.11,.04,.21,.42,.10,.28,.16,-.15,-.17,.33,.07,.36,.10)*f1_0+
        mat4(-.18,-.17,.61,-.02,.45,.32,-.26,-.03,.28,.18,-.33,.07,-.03,.08,.19,-.29)*f1_1+
        mat4(-.14,.29,-.07,.12,.20,.04,-.14,-.13,.05,.24,.22,.19,-.21,.23,-.04,.07)*f1_2+
        mat4(-.35,-.46,.26,.25,-.32,.28,.23,-.45,.55,.20,-.30,.35,.70,.21,.42,.41)*f1_3+
        mat4(-.05,-.44,.17,.10,.07,.13,.15,.22,-.88,.46,.45,-.21,-.23,-.01,.05,-.32)*f1_4+
        mat4(-.25,.20,.08,-.33,.41,-.12,.15,.32,-.34,.06,-.13,.66,.01,.14,.01,-.12)*f1_5+
        mat4(-.03,-.31,-.67,.18,-.59,-.31,.25,.26,.35,-.25,-.28,.55,.10,.26,-.22,.24)*f1_6+
        mat4(.32,-.01,-.06,-.27,.37,.01,.43,.10,-.18,.28,.29,-.37,-.31,-.15,.24,-.09)*f1_7+
        vec4(2.33,2.33,-3.04,2.87))/1.4+f1_6;
    vec4 f2_7=sin(mat4(.62,.02,-.01,-.22,.00,.27,.30,-.07,.08,.08,.41,-.08,-.07,.25,.02,-.07)*f1_0+
        mat4(.20,-.33,.33,.10,.03,-.39,-.03,.24,-.64,-.37,-.08,-.22,.02,.25,.16,.03)*f1_1+
        mat4(-.11,-.34,.03,.25,.05,.02,.18,.13,.32,.12,.23,-.39,-.28,-.30,-.12,-.17)*f1_2+
        mat4(-.15,.43,.27,.27,-.07,-.06,.04,-.34,.39,-.26,-.05,.32,-.02,-.25,-.04,-.03)*f1_3+
        mat4(-.36,-.24,-.09,-.26,.12,-.31,-.09,-.05,-.45,-.26,-.09,-.18,-.21,-.20,.08,-.16)*f1_4+
        mat4(-.14,-.19,-.08,.26,-.13,.40,-.17,-.25,.31,-.26,-.09,-.11,.23,-.32,.21,-.15)*f1_5+
        mat4(.07,-.22,-.33,.38,.31,.17,-.15,.02,-.01,-.11,.44,.36,-.15,.29,.34,.05)*f1_6+
        mat4(.40,-.18,-.09,.36,.36,-.34,-.03,-.41,-.38,.09,-.05,.46,-.29,.46,.26,.05)*f1_7+
        vec4(-2.65,2.13,-.59,1.99))/1.4+f1_7;
    vec4 f3_0=sin(mat4(-.18,-.43,-.06,-.52,-.02,.08,-.15,.04,-.01,-.32,.11,-.23,.02,.37,-.01,.35)*f2_0+
        mat4(.31,-.29,-.04,.55,-.50,.19,.45,-.24,-.25,-.12,.34,-.16,-.17,.20,-.32,-.47)*f2_1+
        mat4(-.33,-.22,-.35,-.35,.26,-.04,.04,-.03,-.52,-.18,.26,.42,.49,.20,-.45,-.54)*f2_2+
        mat4(-.13,.55,-.11,-.07,-.35,.36,.06,.04,-.15,-.00,.66,.31,.21,-.08,-.54,-.63)*f2_3+
        mat4(-.01,.16,.03,-.12,-.14,-.09,.14,.19,.43,.40,-.07,-.04,.71,.20,-.23,-.28)*f2_4+
        mat4(-.12,.02,.15,.02,-.11,.11,.24,.07,-.31,-.02,-.51,.01,.26,.07,.08,-.24)*f2_5+
        mat4(.19,-.06,.04,.19,.39,-.11,.34,-.12,-.02,-.27,.26,-.22,-.35,-.07,.05,-.30)*f2_6+
        mat4(-.39,-.15,-.23,.01,-.20,.14,.05,.32,-.51,.17,.42,-.04,-.29,.05,-.47,-.08)*f2_7+
        vec4(3.40,-.91,1.01,-2.62))/1.7+f2_0;
    vec4 f3_1=sin(mat4(-.28,-.13,-.15,.25,-.34,-.34,-.06,-.20,-.12,.17,.22,.00,.39,.04,-.28,.11)*f2_0+
        mat4(.16,.19,.22,.01,.21,-.58,-.15,.17,-.15,.08,-.11,-.48,-.06,-.33,.18,.17)*f2_1+
        mat4(.29,-.23,-.19,-.24,.16,-.10,-.11,.39,.08,.13,.21,.38,.01,-.01,-.06,-.15)*f2_2+
        mat4(.39,.51,-.26,-.26,.14,.39,.41,-.02,-.63,-.25,.21,.30,-.44,-.27,-.07,-.30)*f2_3+
        mat4(-.15,.20,.28,.23,.15,.16,.12,-.15,.46,-.44,.36,.34,.18,.35,-.07,.21)*f2_4+
        mat4(.24,-.13,-.33,-.02,-.05,-.24,-.19,.02,-.16,-.13,.34,-.26,-.31,-.34,.39,.16)*f2_5+
        mat4(-.12,.08,-.35,-.33,-.16,-.39,-.36,-.23,.32,-.53,.06,-.42,-.23,.46,-.13,.16)*f2_6+
        mat4(-.08,-.44,.32,.30,-.03,.39,-.06,.20,-.02,-.02,.02,.19,-.24,.30,.50,.06)*f2_7+
        vec4(2.98,2.94,-.19,-2.00))/1.7+f2_1;
    vec4 f3_2=sin(mat4(-.12,-.03,-.12,-.54,.17,-.49,-.05,.48,.13,.33,-.10,-.04,-.12,.14,.11,-.08)*f2_0+
        mat4(.03,.32,.02,.23,.17,.38,.29,.34,.16,-.16,-.37,-.03,.21,.06,-.07,-.19)*f2_1+
        mat4(-.35,-.03,-.34,.34,.39,-.24,.23,-.28,-.44,-.35,.36,.26,.36,-.37,-.44,.04)*f2_2+
        mat4(-.00,.30,.22,-.38,-.17,.29,-.09,.25,-.20,.36,.06,-.16,.44,-.28,.54,1.03)*f2_3+
        mat4(.72,.31,-.32,.23,-.15,.24,.36,.18,-.41,-.08,-.33,.31,-.17,-.20,-.27,-.73)*f2_4+
        mat4(-.32,.20,-.27,-.05,-.33,-.00,.21,-.57,-.40,.09,.26,.72,-.25,-.04,-.32,.47)*f2_5+
        mat4(-.09,.15,-.41,-.18,.22,-.15,-.03,.78,.22,.26,.34,.36,.24,.33,-.17,-.04)*f2_6+
        mat4(.35,-.17,.12,.37,-.41,.11,.44,-.55,-.12,-.20,.42,.06,.22,.00,-.08,-.20)*f2_7+
        vec4(.33,-1.04,-2.24,-1.01))/1.7+f2_2;
    vec4 f3_3=sin(mat4(.55,.29,-.58,.27,-.02,-.15,.15,.30,.27,.23,.13,.18,.25,.20,-.17,-.06)*f2_0+
        mat4(.10,.33,.02,.39,.31,-.28,-.03,-.18,-.21,-.43,.04,.12,.28,-.15,.41,-.19)*f2_1+
        mat4(-.30,.39,.03,-.04,.01,-.69,-.20,-.21,.03,.42,.30,-.02,-.10,.01,.02,-.36)*f2_2+
        mat4(-.61,.19,-.21,-.12,.25,.19,-.22,.25,.26,.32,-.21,-.13,-.40,.16,-.33,.14)*f2_3+
        mat4(-.27,-.12,.17,.14,-.55,-.01,.38,-.23,.08,.27,.22,-.30,.18,.20,.01,-.01)*f2_4+
        mat4(-.21,-.10,-.40,.49,.20,-.06,.31,.01,-.39,-.14,-.03,-.06,-.11,-.07,-.30,.18)*f2_5+
        mat4(-.23,-.28,-.35,-.04,.39,-.28,-.22,-.22,.34,-.18,-.07,.16,.06,.63,.09,.28)*f2_6+
        mat4(.35,-.16,-.05,-.20,-.15,.48,.30,-.10,.60,-.47,-.47,.02,.16,.19,.05,-.42)*f2_7+
        vec4(-1.82,-.95,-2.91,2.17))/1.7+f2_3;
    vec4 f3_4=sin(mat4(-.41,.18,.08,-.52,-.35,.25,.30,.07,.08,-.11,.02,-.35,.08,-.08,-.05,.18)*f2_0+
        mat4(.28,-.28,-.36,.07,.05,-.11,.27,-.00,-.22,-.07,.05,-.08,-.42,.11,.45,.22)*f2_1+
        mat4(.11,-.10,.38,.34,-.27,.00,-.10,-.23,.24,-.09,.02,.02,.75,.10,-.36,.38)*f2_2+
        mat4(.27,-.25,-.25,.16,-.66,.14,-.11,-.13,.02,-.56,.23,.35,.14,.03,.86,.05)*f2_3+
        mat4(.46,-.29,-.30,-.07,.24,-.16,-.07,.49,.01,-.66,-.42,-.44,.17,-.25,.23,.21)*f2_4+
        mat4(-.09,-.18,.10,.03,-.21,-.10,-.02,.23,.05,.10,-.26,-.04,-.15,.14,-.29,-.26)*f2_5+
        mat4(-.45,.18,-.18,-.21,.24,-.19,.28,-.39,.63,-.12,-.15,-.29,.03,-.20,.03,.19)*f2_6+
        mat4(.12,-.05,.23,-.37,-.26,-.06,.01,-.12,-.66,.27,.34,.18,.32,-.14,.32,.19)*f2_7+
        vec4(-2.94,.41,1.65,2.12))/1.7+f2_4;
    vec4 f3_5=sin(mat4(.11,-.27,-.20,.26,-.02,-.22,-.23,-.25,.06,.02,.04,-.23,-.48,-.28,.02,.09)*f2_0+
        mat4(-.04,-.29,-.65,-.16,-.22,.06,.43,.30,-.00,.13,-.55,-.10,.13,-.64,-.73,.14)*f2_1+
        mat4(.52,.30,-.53,-.11,.15,-.20,.14,-.05,-.42,.08,-.40,.35,-.08,-.26,.51,.08)*f2_2+
        mat4(.41,.21,.69,.16,-.58,-.10,-.03,-.39,-.66,.06,-.03,.28,-.15,.24,.46,.18)*f2_3+
        mat4(.05,-.05,-.16,-.13,.45,.41,.20,-.09,.01,.28,.39,.13,.41,.04,-.05,.47)*f2_4+
        mat4(-.36,-.43,.12,.12,.71,.09,.15,-.15,-.23,.42,.06,-.38,.94,.11,.04,.28)*f2_5+
        mat4(-.15,-.02,-.06,.35,.20,.20,.55,-.25,-.17,-.56,-.08,-.23,-.44,-.26,.46,.24)*f2_6+
        mat4(-.10,.13,.22,.18,-.25,.12,-.22,.26,-.01,-.23,-.69,.12,-.06,-.18,-.62,.24)*f2_7+
        vec4(-1.08,1.39,-.62,2.38))/1.7+f2_5;
    vec4 f3_6=sin(mat4(-.20,.30,-.49,-.79,.09,-.10,-.23,-.01,-.46,.02,.05,-.03,.03,.15,.11,.47)*f2_0+
        mat4(.15,-.20,-.18,-.25,.01,-.35,.26,.17,.08,.01,.29,-.45,.05,-.19,.03,.47)*f2_1+
        mat4(-.07,.28,.02,.35,.03,-.12,.25,-.36,-.34,-.10,.11,.57,-.07,-.33,.00,-.84)*f2_2+
        mat4(-.07,-.11,.01,.81,-.11,-.32,-.37,.04,.35,.16,.17,1.04,-.59,.27,-.22,-.09)*f2_3+
        mat4(-.02,.15,.38,-.71,-.24,.21,-.08,-.64,-.24,.05,-.40,-.59,-.32,.02,-.51,-.34)*f2_4+
        mat4(.05,.36,.04,-.03,.08,-.51,.30,.39,-.15,-.31,-.15,.03,-.10,.07,.27,-.49)*f2_5+
        mat4(-.06,.05,-.26,-.57,-.58,-.21,.35,-.31,-.08,.32,-.34,.16,-.41,-.15,-.47,.50)*f2_6+
        mat4(.24,.13,.07,-.46,.21,.12,.29,-.49,-.10,-.20,.26,-.06,.16,.41,-.20,-.13)*f2_7+
        vec4(-.06,-.78,1.08,.71))/1.7+f2_6;
    vec4 f3_7=sin(mat4(.13,.00,.35,.61,.22,-.10,.08,-.16,.39,-.18,-.13,-.38,-.32,-.23,-.30,.25)*f2_0+
        mat4(-.07,-.07,-.08,.12,.31,-.27,-.13,.16,-.03,.03,-.24,.09,-.29,.08,.27,.21)*f2_1+
        mat4(.10,.31,-.50,.04,.32,-.13,.24,-.14,.05,-.35,.58,.02,-.03,.12,.28,-.30)*f2_2+
        mat4(.27,-.19,.06,-.23,.43,-.19,.30,.34,.39,.25,.24,.14,-.34,-.42,-.02,-.29)*f2_3+
        mat4(.17,-.16,.07,-.23,-.18,.16,.17,-.17,-.08,.15,.29,.33,-.39,.05,-.02,.06)*f2_4+
        mat4(-.32,.15,-.15,.33,-.08,.00,.82,-.14,.04,-.44,.53,-.20,.06,.28,.26,-.03)*f2_5+
        mat4(-.28,.25,.01,-.14,-.23,.04,-.71,.17,-.04,.17,.46,.02,.15,.16,-.61,.35)*f2_6+
        mat4(-.43,-.42,.23,-.06,-.02,-.19,.36,.05,-.32,.46,-.02,-.20,.26,.20,-.32,.10)*f2_7+
        vec4(.17,3.27,-1.50,3.07))/1.7+f2_7;
    return dot(f3_0,vec4(.00,.02,-.00,.02))+
        dot(f3_1,vec4(-.02,.01,.02,-.02))+
        dot(f3_2,vec4(-.01,.03,.02,.01))+
        dot(f3_3,vec4(.01,-.01,-.03,.01))+
        dot(f3_4,vec4(-.01,.02,-.01,-.02))+
        dot(f3_5,vec4(.00,.01,-.00,.02))+
        dot(f3_6,vec4(-.02,-.01,.01,-.00))+
        dot(f3_7,vec4(.02,.01,-.00,.03))+
        0.106;


}

/////////////////////////////////////////////////////
//// Step 1: training a neural SDF model
//// You are asked to train your own neural SDF model on Colab. 
//// Your implementation should take place in neural_sdf.ipynb.
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
//// Step 2: copy neural SDF weights to GLSL
//// In this step, you are asked to the network weights you have trained from the text file to the function sdfCow().
//// You should replace the default implementation (a sphere) with your own network weights. 
/////////////////////////////////////////////////////

float sdfCow(vec3 p)
{
    // Rotation addition
    // CHANGE HERE
    float rotationAngle = iTime * 0.5;
    p = rotate(p, vec3(0., 1., 0.), rotationAngle);

    p = rotate(p, vec3(1., 0., 0.), PI / 2.);
    p = rotate(p, vec3(0., 0., 1.), PI / 3. + PI/3.0);

    // sdf is undefined outside the unit sphere, uncomment to witness the abominations
    if(length(p) > 1.)
    {
        return length(p) - 0.9;
    }

    //// your implementation starts
    vec4 f0_0=sin(p.y*vec4(-2.42,-2.74,3.40,-4.16)+p.z*vec4(-.60,2.06,-3.82,-2.42)+p.x*vec4(1.05,-3.78,-3.90,-3.39)+vec4(6.22,-.70,-.21,-5.72));
    vec4 f0_1=sin(p.y*vec4(2.67,2.70,2.15,-2.37)+p.z*vec4(2.18,2.16,-1.51,.14)+p.x*vec4(2.13,-1.95,2.02,2.19)+vec4(2.20,4.77,-4.29,-.73));
    vec4 f0_2=sin(p.y*vec4(-2.73,-2.60,1.76,-.42)+p.z*vec4(.88,2.25,3.59,2.77)+p.x*vec4(2.00,-3.87,3.30,-1.70)+vec4(-2.94,.66,-3.96,8.89));
    vec4 f0_3=sin(p.y*vec4(-2.87,-3.85,-2.91,3.65)+p.z*vec4(1.94,-.78,-4.11,1.07)+p.x*vec4(2.61,.42,-.93,.29)+vec4(-1.64,-4.32,-.22,-3.34));
    vec4 f1_0=sin(mat4(-.39,.68,-.40,-.27,.17,-.27,.15,-.09,-.18,-.59,.05,.10,.22,-.19,.16,-.02)*f0_0+
        mat4(.24,.19,.05,.75,.18,.25,.16,-.24,.94,.68,.02,.92,.15,.32,.45,-.40)*f0_1+
        mat4(-.50,-.30,-.09,.18,-.67,.05,.37,-.28,.27,-.13,.03,-.23,-.07,.72,-.25,-.41)*f0_2+
        mat4(-.07,.10,-.07,-.18,-.39,-.58,-.05,-.21,.12,.23,-.09,-.05,.51,-.17,.42,-.73)*f0_3+
        vec4(-1.10,3.86,-1.97,2.34))/1.0+f0_0;
    vec4 f1_1=sin(mat4(-.30,-.46,-.03,-.11,-.05,.10,-.48,-.50,.07,-.06,.01,.16,-.03,.10,.43,.20)*f0_0+
        mat4(.39,-.51,.98,-.42,-.38,.65,-.20,.07,-.59,.46,.22,.03,.30,.30,-.90,.32)*f0_1+
        mat4(.23,.22,-1.34,.69,-.60,.59,.03,.36,.40,-.22,-.35,.11,-.20,-.51,.96,-.18)*f0_2+
        mat4(.13,.24,.83,.04,-.09,.22,.39,-.23,-.18,.05,-.49,-.56,-.38,-.07,.41,-.23)*f0_3+
        vec4(1.31,-2.17,2.53,1.00))/1.0+f0_1;
    vec4 f1_2=sin(mat4(-.28,-.51,-.18,.76,.04,-.05,-.19,.56,.27,.21,-.30,.29,-.03,-.46,-.47,.44)*f0_0+
        mat4(-.28,.30,.16,-.04,-.54,-1.15,.10,-.26,-.02,.74,-.13,.71,-.37,.30,-.58,-.21)*f0_1+
        mat4(-.82,.55,-.50,-.17,.65,.11,-.26,.16,.23,.48,-.69,-.07,-.39,.44,.00,-.64)*f0_2+
        mat4(-.56,-.63,.52,-.47,-.27,.49,.06,.04,-.12,.26,.13,-.59,.48,.11,-.30,-.31)*f0_3+
        vec4(.78,-2.44,-1.22,.84))/1.0+f0_2;
    vec4 f1_3=sin(mat4(-.41,-.02,-.03,-.07,-.09,.05,.33,-.13,-.03,.33,.41,.35,.14,.14,.10,-.11)*f0_0+
        mat4(.35,-.44,-.37,-.66,-.67,-.44,.30,-.10,-.19,.35,-.10,-.42,-.14,.56,.26,-.25)*f0_1+
        mat4(-.11,-.29,.24,.25,-.26,.26,-.66,-.22,-.19,-.60,.27,.12,.44,.42,-.56,-.82)*f0_2+
        mat4(-.08,.08,.11,.47,-.20,-.17,-.19,-.19,.11,.07,-.30,.31,.16,.17,.38,.42)*f0_3+
        vec4(-.73,3.32,.83,-2.62))/1.0+f0_3;
    vec4 f2_0=sin(mat4(.49,-.50,-.33,-.25,-.17,-.58,-.15,-.32,.03,-.10,.03,.11,.56,.27,.21,-.16)*f1_0+
        mat4(-.58,-.77,-.19,-.02,.32,-.81,.40,-.36,-.38,-.24,-.09,-.29,-.18,-.44,.46,-.02)*f1_1+
        mat4(.29,-.95,.73,-.03,.05,-.51,.03,.32,-.13,-.22,-.43,.78,-.61,.04,-.11,-.03)*f1_2+
        mat4(-.06,-.04,.21,.13,-.59,-.41,-.11,-.75,-.58,-.24,-.13,.03,-.74,-.19,-.44,-.24)*f1_3+
        vec4(-.78,2.43,2.73,1.04))/1.4+f1_0;
    vec4 f2_1=sin(mat4(.46,-1.29,-.16,-.69,.82,.36,.59,-.10,-.13,-.34,.47,-.27,-.92,-.33,-.20,.44)*f1_0+
        mat4(.43,.31,-.04,-.73,.26,-.63,.21,-.10,.18,-.69,.59,-.54,.02,-.01,-.02,.25)*f1_1+
        mat4(-.07,-.27,-.17,.64,.60,-.69,-.13,-.57,.52,-.41,.26,-.20,.26,.23,-.78,.22)*f1_2+
        mat4(-.02,-.54,.76,-1.08,.09,-.36,.03,-.17,-.09,.48,-.80,.32,-.06,.68,-.32,-.38)*f1_3+
        vec4(-3.00,3.36,-3.35,-.36))/1.4+f1_1;
    vec4 f2_2=sin(mat4(-.44,-.32,.81,.57,-.04,.26,.44,.88,.02,.76,-.08,.51,.05,.91,-.24,.13)*f1_0+
        mat4(.87,.17,.09,.83,.18,-.25,-.89,-.32,.37,-.29,-.53,.45,.39,1.04,-.34,.92)*f1_1+
        mat4(1.18,-.82,.16,.11,.48,-.36,-.20,-.06,-.77,.51,.47,.56,.06,-.50,.68,-.14)*f1_2+
        mat4(.18,.63,-1.11,-.40,-.07,-.64,-.41,-.43,-.21,1.34,.78,.43,-.27,-.58,1.19,.46)*f1_3+
        vec4(2.93,.76,-.93,-2.90))/1.4+f1_2;
    vec4 f2_3=sin(mat4(-.84,-.11,.46,.51,-.62,-.44,-.30,-.49,-.12,.76,.44,.38,.35,1.19,.09,.01)*f1_0+
        mat4(.32,-.01,-.26,-.57,-.30,.42,.07,.32,.16,.03,-.12,.30,-.09,.14,-.96,-.15)*f1_1+
        mat4(-.39,.19,-.51,.19,.22,-.08,.50,.00,-.50,-.20,.01,.45,.10,.07,.13,-.31)*f1_2+
        mat4(.41,-.39,.72,.32,-.21,.97,.23,.03,.19,-.41,-.11,-.04,-.23,.52,.48,.25)*f1_3+
        vec4(3.63,-.59,3.43,-.59))/1.4+f1_3;
    return dot(f2_0,vec4(-.06,.03,-.09,.09))+
        dot(f2_1,vec4(.04,-.03,.04,.05))+
        dot(f2_2,vec4(-.02,.00,-.02,-.02))+
        dot(f2_3,vec4(-.04,-.04,.08,-.06))+
        -0.221;

    /*
    vec4 f0_0=sin(p.y*vec4(1.69,-.29,.63,-.87)+p.z*vec4(.15,.90,2.07,-3.46)+p.x*vec4(-3.58,-2.06,-1.84,-4.31)+vec4(-5.37,-1.01,7.43,-3.62));
vec4 f0_1=sin(p.y*vec4(-2.07,-1.52,-3.20,.14)+p.z*vec4(.79,.90,1.20,4.89)+p.x*vec4(-3.11,.23,3.69,-.48)+vec4(-2.60,-.74,-5.93,.01));
vec4 f0_2=sin(p.y*vec4(2.78,1.77,2.10,-.81)+p.z*vec4(1.57,-4.21,-3.08,1.07)+p.x*vec4(2.16,.40,-.07,.93)+vec4(3.30,.98,7.75,.84));
vec4 f0_3=sin(p.y*vec4(-2.86,.15,-.16,-1.74)+p.z*vec4(-1.47,-3.18,-1.97,-2.21)+p.x*vec4(-2.80,-1.13,-.18,.45)+vec4(-8.26,-6.30,-3.64,4.08));
vec4 f1_0=sin(mat4(-.54,.07,.48,.20,-.91,.19,.39,.61,.28,-.69,.18,.48,.00,-.34,-.09,.20)*f0_0+
    mat4(.20,-.20,-.46,.33,.35,-.67,.02,.34,.51,.39,-.46,-.25,-.28,-.24,-.04,.06)*f0_1+
    mat4(-.63,.11,.15,.79,.02,.84,-.22,-.06,-.32,-.14,.27,-.10,-.05,.43,-.21,-.95)*f0_2+
    mat4(.55,.55,-.06,-.24,-.52,-.15,.47,.17,.46,-.15,.48,-1.29,-.02,-.05,.17,-.12)*f0_3+
    vec4(-2.07,2.91,1.86,-3.24))/1.0+f0_0;
vec4 f1_1=sin(mat4(.50,-.40,-.35,-.34,.35,-.44,-.48,-.68,.71,-.53,-.17,.30,-.39,-.09,-.24,-.15)*f0_0+
    mat4(.29,.60,-.46,.02,-.25,-.14,.58,.35,-.10,.10,-.49,.45,-.15,.09,-.25,.67)*f0_1+
    mat4(.48,-.05,-.80,-.23,-.14,.11,.01,-.93,-.32,-.20,.12,-.38,.02,-.16,.25,.12)*f0_2+
    mat4(-.79,.14,.62,-.26,.18,.50,.87,.10,.11,.14,-.35,-.29,-.70,-.19,-.68,-.25)*f0_3+
    vec4(-2.17,-2.37,-.78,-.31))/1.0+f0_1;
vec4 f1_2=sin(mat4(.10,.14,.42,-.57,-.52,-.61,.41,.45,.79,.31,.25,-.18,.07,-.03,.13,-.01)*f0_0+
    mat4(-.47,-.25,.03,.37,.31,-1.00,-.27,.08,.04,-.02,-.27,-.31,.34,.12,-.05,-.38)*f0_1+
    mat4(-.17,-.69,-.16,-.44,.49,.27,-.07,-.27,-.66,.31,-1.14,.01,-.79,-.01,.12,.90)*f0_2+
    mat4(.45,-.27,-.27,.36,-.01,.25,.04,.41,-1.05,.28,-.15,.12,.72,-.02,.27,-.09)*f0_3+
    vec4(-.99,1.64,-2.44,3.37))/1.0+f0_2;
vec4 f1_3=sin(mat4(1.03,.68,.43,-.13,.37,.12,.33,.45,.56,.68,-.32,.52,-.42,-.01,-.23,-.08)*f0_0+
    mat4(-.81,-.63,-.50,-.41,-.54,-.16,.90,-.72,-.35,-.26,-.71,.24,-.32,.13,.14,.27)*f0_1+
    mat4(.02,.41,.43,-.05,-.38,.61,-.53,.30,-.15,-.12,1.05,-.59,-.63,.00,-.67,.71)*f0_2+
    mat4(-.33,-.22,.70,-.31,.15,.51,.34,-.18,-.89,-.14,-.01,-.15,-.12,-.60,.59,.04)*f0_3+
    vec4(-1.33,-.21,1.05,3.80))/1.0+f0_3;
vec4 f2_0=sin(mat4(.21,-.10,-.50,.20,.02,1.01,.48,-.38,-.40,-.30,.23,-.04,.15,-.07,-.49,.20)*f1_0+
    mat4(.02,-.24,.48,.07,.23,1.03,-.08,.09,.31,.25,-.34,-.03,.46,.28,-.07,-.32)*f1_1+
    mat4(.19,.25,-.40,-.59,-.20,.52,1.06,.04,.54,.24,-.52,.13,.39,-.14,.52,-.50)*f1_2+
    mat4(.24,.24,.31,-.13,-.26,-.29,-.26,-.52,-.12,-.50,.13,-.36,.38,.59,.17,-.49)*f1_3+
    vec4(-2.35,.40,.07,1.35))/1.4+f1_0;
vec4 f2_1=sin(mat4(.79,.39,.39,.34,-.13,.39,-.52,.66,-.10,-.32,.00,.47,.19,.56,-.81,-.07)*f1_0+
    mat4(.03,.48,-.90,-.41,.03,.08,.08,-.34,.31,-.02,-.07,-.04,-.18,.15,-.14,-.38)*f1_1+
    mat4(.65,.01,.26,-.33,-.36,.05,.03,-.18,-.24,.33,.32,-.55,.38,-.17,.12,-.20)*f1_2+
    mat4(.07,-.33,.81,.05,.21,-.13,.70,-1.34,-.10,-.11,-.11,.25,-.41,-.56,.18,-.28)*f1_3+
    vec4(-.61,-.63,-1.96,-1.18))/1.4+f1_1;
vec4 f2_2=sin(mat4(.21,.17,.08,-.63,.15,.20,-.41,.11,-.22,-.91,-.50,.18,-1.09,-.01,.03,-.17)*f1_0+
    mat4(.12,-.04,.10,-.74,-.06,.39,-1.01,.11,-.78,.47,.16,-.00,.17,.16,-.17,-.66)*f1_1+
    mat4(.14,-.04,.75,-.05,.99,-.37,-.25,.31,-.23,-.50,-.34,.03,-.64,.13,.05,.58)*f1_2+
    mat4(-.69,-.03,-.01,.63,-.82,.43,.80,-1.14,1.24,.48,1.24,.10,-.24,.91,-1.06,-.48)*f1_3+
    vec4(-1.34,3.00,-3.16,1.44))/1.4+f1_2;
vec4 f2_3=sin(mat4(.74,.08,-.06,.50,-.15,.09,.31,-.38,.08,.02,-.48,.31,.51,-.19,-.63,-.11)*f1_0+
    mat4(-.76,-.83,-.08,.58,.20,.53,.16,1.15,-1.28,.21,.27,-.39,.22,-.42,.22,1.43)*f1_1+
    mat4(.24,.42,1.66,-.22,-.02,-.97,.16,-.20,1.16,1.11,-.31,-.37,-.31,-.95,-.18,-.21)*f1_2+
    mat4(.08,-.42,-.20,1.03,-.24,-.03,.82,.37,-.93,.78,.99,-.08,-.15,-.23,.20,-.29)*f1_3+
    vec4(3.58,-.86,-3.52,-1.75))/1.4+f1_3;
return dot(f2_0,vec4(.00,-.06,.13,.05))+
    dot(f2_1,vec4(-.04,-.09,.02,.03))+
    dot(f2_2,vec4(.02,.07,-.04,-.02))+
    dot(f2_3,vec4(.02,-.02,.04,.01))+
    -0.206;
    */
    //// your implementation ends
}

float sdfUnion(float d1, float d2)
{
    return min(d1, d2);
}

/////////////////////////////////////////////////////
//// Step 3: scene sdf
//// You are asked to use the sdf boolean operations to draw the bunny and the cow in the scene.
//// The bunny is located in the ceter of vec3(-1.0, 1., 4.), and the cow is located in the center of vec3(1.0, 1., 4.).
/////////////////////////////////////////////////////

//// sdf: p - query point
float sdf(vec3 p)
{
    float s = 0.;

    float plane_h = -0.1;

    //// calculate the sdf based on all objects in the scene

    //// your implementation starts

    float plane_sdf = sdfPlane(p, plane_h);

    vec3 bunny_pos = vec3(-1.0, 1.0, 4.0);
    float bunny_sdf = sdfBunny(p - bunny_pos);

    vec3 cow_pos = vec3(1.0, 1.0, 4.0);
    float cow_sdf = sdfCow(p - cow_pos);

    s = sdfUnion(plane_sdf, sdfUnion(bunny_sdf, cow_sdf));
    //// your implementation ends

    return s;
}

/////////////////////////////////////////////////////
//// ray marching
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
//// Step 4: ray marching
//// You are asked to implement the ray marching algorithm within the following for-loop.
//// You are allowed to reuse your previous implementation in A1a for this function.
/////////////////////////////////////////////////////

//// ray marching: origin - ray origin; dir - ray direction 
float rayMarching(vec3 origin, vec3 dir)
{
    float s = 0.0;
    // Yanked from my a1a
    for(int i = 0; i < 100; i++)
    {
        //// your implementation starts
        vec3 curr = origin + dir * s;
        float dist = sdf(curr);

        if (dist < 0.001) {
            return s;
        }

        s += dist;
        //123.0 is a sorta arbitrary value but ill know it ran
        if (s > 123.0) {
            return 123.0;
        }
        //// your implementation ends
    }
    
    return s;
}

/////////////////////////////////////////////////////
//// normal calculation
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
//// Step 5: normal calculation
//// You are asked to calculate the sdf normal based on finite difference.
//// You are allowed to reuse your previous implementation in A1a for this function.
/////////////////////////////////////////////////////

//// normal: p - query point
vec3 normal(vec3 p)
{
    float s = sdf(p);          //// sdf value in p
    float dx = 0.01;           //// step size for finite difference

    //// your implementation starts
    // Stolen from my a1a
    return normalize(vec3(
                sdf(p + vec3(dx, 0.0, 0.0)) - s, 
                sdf(p + vec3(0.0, dx, 0.0)) - s, 
                sdf(p + vec3(0.0, 0.0, dx)) - s));
}

/////////////////////////////////////////////////////
//// Phong shading
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
//// Step 6: lighting and coloring
//// You are asked to specify the color for the two neural SDF objects in the scene.
//// Each object must have a separate color without mixing.
//// Notice that we have implemented the default Phong shading model for you.
/////////////////////////////////////////////////////

vec3 phong_shading(vec3 p, vec3 n)
{
    //// background
    if(p.z > 20.0)
    {
        vec3 color = vec3(0.04, 0.16, 0.33);
        return color;
    }

    //// phong shading
    vec3 lightPos = vec3(4. * sin(iTime), 4., 4. * cos(iTime));
    vec3 l = normalize(lightPos - p);
    float amb = 0.1;
    float dif = max(dot(n, l), 0.) * 0.7;
    vec3 eye = CAM_POS;
    float spec = pow(max(dot(reflect(-l, n), normalize(eye - p)), 0.0), 128.0) * 0.9;

    vec3 sunDir = normalize(vec3(0, 1, -1)); //// parallel light direction
    float sunDif = max(dot(n, sunDir), 0.) * 0.2;

    //// shadow
    float s = rayMarching(p + n * 0.02, l);
    if(s < length(lightPos - p))
        dif *= .2;

    vec3 color = vec3(1.0);

    //// your implementation starts
    float plane_h = -0.1;
    float plane_sdf = sdfPlane(p, plane_h);

    vec3 bunny_pos = vec3(-1.0, 1.0, 4.0);
    float bunny_sdf = sdfBunny(p - bunny_pos);

    vec3 cow_pos = vec3(1.0, 1.0, 4.0);
    float cow_sdf = sdfCow(p - cow_pos);

    float small = 0.1;
    if (abs(plane_sdf) < small) {
        color = vec3(0.06, 0.86, 0.06); // Green
    } else if (abs(bunny_sdf) < small) {
        color = vec3(0.82, 0.14, 0.67); // Green
    } else if (abs(cow_sdf) < small) {
        color = vec3(0.29, 0.56, 0.94); // Green
    }
    //// your implementation ends

    return (amb + dif + spec + sunDif) * color;
}

/////////////////////////////////////////////////////
//// main function
/////////////////////////////////////////////////////

void mainImage(out vec4 fragColor, in vec2 fragCoord)
{
    vec2 uv = (fragCoord.xy - .5 * iResolution.xy) / iResolution.y;         //// screen uv
    vec3 origin = CAM_POS;                                                  //// camera position 
    vec3 dir = normalize(vec3(uv.x, uv.y, 1));                              //// camera direction
    float s = rayMarching(origin, dir);                                     //// ray marching
    vec3 p = origin + dir * s;                                              //// ray-sdf intersection
    vec3 n = normal(p);                                                     //// sdf normal
    vec3 color = phong_shading(p, n);                                       //// phong shading
    fragColor = vec4(color, 1.);                                            //// fragment color
}

void main()
{
    mainImage(gl_FragColor, gl_FragCoord.xy);
}